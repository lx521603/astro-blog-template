---
import BaseLayout from '../../layouts/BaseLayout.astro';

const title = '微微的日常';
const description = 'Latest articles.';
const permalink = `${Astro.site.href}blog`;

// 直接使用 import.meta.glob 获取文章原始内容
const postModules = import.meta.glob('../../data/blog-posts/*.md', { 
  eager: true,
  query: '?raw'
});

// 处理文章数据
const allPosts = Object.entries(postModules).map(([filePath, module]) => {
  const rawContent = module.default;
  const fileName = filePath.split('/').pop();
  const slug = fileName.replace('.md', '');
  
  // 解析 frontmatter
  const frontmatterMatch = rawContent.match(/---\s*\n([\s\S]*?)\n\s*---/);
  let frontmatter = {};
  
  if (frontmatterMatch) {
    const frontmatterText = frontmatterMatch[1];
    frontmatterText.split('\n').forEach(line => {
      const colonIndex = line.indexOf(':');
      if (colonIndex > -1) {
        const key = line.slice(0, colonIndex).trim();
        const value = line.slice(colonIndex + 1).trim().replace(/^['"](.*)['"]$/, '$1');
        frontmatter[key] = value;
      }
    });
  }
  
  // 获取正文内容（去掉 frontmatter 部分）
  const body = frontmatterMatch ? rawContent.slice(frontmatterMatch[0].length) : rawContent;
  
  return {
    slug,
    data: frontmatter,
    body
  };
}).filter(post => post.data.title) // 确保有标题的文章
  // 修改排序逻辑：先按置顶排序，再按日期排序
  .sort((a, b) => {
    // 检查是否为置顶文章
    const aPinned = a.data.pinned === 'true' || a.data.pinned === true;
    const bPinned = b.data.pinned === 'true' || b.data.pinned === true;
    
    // 置顶文章排在前面
    if (aPinned && !bPinned) return -1;
    if (!aPinned && bPinned) return 1;
    
    // 都是置顶或都不是置顶，按日期排序
    return new Date(b.data.publishDate).valueOf() - new Date(a.data.publishDate).valueOf();
  });

// 改进的图片提取函数
function getFirstImageFromBody(body) {
  if (!body) return null;
  
  // 先匹配 Markdown 图片语法 ![alt](src)
  const mdRegex = /!\[.*?\]\((.*?)\)/i;
  const mdMatch = body.match(mdRegex);
  if (mdMatch) return mdMatch[1];
  
  // 再匹配 HTML img 标签
  const htmlRegex = /<img[^>]+src="([^">]+)"[^>]*>/i;
  const htmlMatch = body.match(htmlRegex);
  if (htmlMatch) return htmlMatch[1];
  
  return null;
}
---

<BaseLayout title={title} description={description} permalink={permalink} current="blog">
  <div class="container">
    <h1>日常</h1>
    {allPosts.map((post, index) => {
      // 修复链接：添加斜杠
      const href = `/blog/${post.slug}/`;
      const firstImage = getFirstImageFromBody(post.body);
      const isPinned = post.data.pinned === 'true' || post.data.pinned === true;
      
      return (
        <div>
          { index !== 0 && <hr /> }
          <div class={`post-item ${isPinned ? 'pinned-post' : ''}`}>
            {/* 自动显示正文中的第一张图片 */}
            {firstImage && (
              <div class="post-image">
                <a href={href}>
                  <img 
                    src={firstImage} 
                    alt={post.data.title}
                    loading="lazy"
                    onerror="this.style.display='none'"
                  />
                </a>
              </div>
            )}
            <div class="post-content">
              <h2>
                <a href={href}>{post.data.title}</a>
                {isPinned && <span class="pinned-badge">置顶 🔝</span>}
              </h2>
              <p>{post.data.description}</p>
              <div class="post-item-footer">
                <span class="post-item-date">— {post.data.publishDate}</span>
              </div>
            </div>
          </div>
        </div>
      )
    })}
  </div>
</BaseLayout>

<style>
  h2,
  .post-item-footer {
    font-family: var(--font-family-sans);
    font-weight: 700;
  }

  .post-item-date {
    color: var(--text-secondary);
    text-align: left;
    text-transform: uppercase;
    margin-right: 16px;
  }

  hr {
    margin: 40px auto;
  }

  /* 图片预览样式 - 取消宽度限制 */
  .post-item {
    display: flex;
    gap: 2.5rem;
    align-items: flex-start;
    margin: 2.5rem 0;
    position: relative;
  }

  .post-image {
    flex: 0 0 300px; /* 使用固定宽度，但可以调整这个值 */
    min-width: 0;
  }

  .post-image img {
    width: 100%;
    height: auto;
    max-height: 400px;
    object-fit: contain;
    border-radius: 12px;
    transition: transform 0.3s ease;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    background: #f8f9fa;
  }

  .post-image img:hover {
    transform: scale(1.05);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
  }

  .post-content {
    flex: 1;
    min-width: 0;
  }

  /* 置顶文章样式 */
  .pinned-post {
    border-left: 4px solid #667eea;
    background: linear-gradient(135deg, #f8f9fa 0%, #f1f3f4 100%);
    padding-left: 1.5rem;
    margin-left: -1.5rem;
    padding: 1.5rem;
    border-radius: 0 16px 16px 0;
  }

  .pinned-badge {
    background: #667eea;
    color: white;
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 0.9rem;
    margin-left: 12px;
    font-weight: 600;
    display: inline-block;
    vertical-align: middle;
  }

  /* 移动端适配 */
  @media (max-width: 768px) {
    .post-item {
      flex-direction: column;
      gap: 1.5rem;
      margin: 2rem 0;
    }

    .post-image {
      flex: none;
      width: 100%;
      max-width: 400px; /* 手机端也可以更宽 */
      margin: 0 auto;
    }
    
    .post-image img {
      max-height: 500px; /* 手机端允许更高的图片 */
    }

    .pinned-post {
      padding-left: 1rem;
      margin-left: -1rem;
      padding: 1rem;
    }

    .pinned-badge {
      font-size: 0.8rem;
      padding: 5px 10px;
      margin-left: 10px;
    }

    hr {
      margin: 35px auto;
    }
  }

  @media (max-width: 480px) {
    .post-item {
      margin: 1.5rem 0;
    }
    
    .post-image {
      max-width: 350px;
    }
    
    .post-image img {
      max-height: 450px;
    }
    
    .container {
      padding: 0 1rem;
    }
  }

  /* 大屏幕优化 */
  @media (min-width: 1200px) {
    .post-image {
      flex: 0 0 350px; /* 大屏幕上更宽 */
    }
    
    .post-image img {
      max-height: 450px;
    }
  }

  /* 超大屏幕优化 */
  @media (min-width: 1400px) {
    .post-image {
      flex: 0 0 400px; /* 超大屏幕上最宽 */
    }
    
    .post-image img {
      max-height: 500px;
    }
  }
</style>
